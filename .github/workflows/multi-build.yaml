name: multi-build
on:
  push:
    branches: 
    - main
    paths: 
    - Dockerfile
    - entrypoint.js
    - .github/workflows/multi-build.yaml
    tags:
      - v*

  workflow_dispatch:
    inputs:
      manual-tag:
        description: 'Manual Tag'
        required: true
        default: 'manual'
        type: string
      ghost_version:
        description: 'Ghost version'
        required: true
        default: '5.86.2'
        type: string
  workflow_call:


env:
  GHCR_IMAGE: ghcr.io/${{ github.repository }}
permissions:
  contents: read

jobs:
  build:
    permissions:
      attestations: write
      actions: write
      checks: write
      contents: write
      deployments: none
      id-token: write
      issues: read
      discussions: read
      packages: write
      pages: none
      pull-requests: read
      repository-projects: read
      security-events: read
      statuses: read

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - 
        name: Harden Runner1
        uses: step-security/harden-runner@int-sh
        with:
          egress-policy: audit
      -
        name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      -
        name: Set up GHOST_VERSION and MANUAL_TAG values, depending on event type (push or workflow_dispatch)
        id: versions
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: |
          if [ ${{ env.GITHUB_EVENT_NAME }} == workflow_dispatch ]; then
            echo "GHOST_VERSION=${{ github.event.inputs.ghost_version }}" >> $GITHUB_OUTPUT
            echo "MANUAL_TAG=${{ github.event.inputs.manual-tag }}" >> $GITHUB_OUTPUT
            echo "GHOST_VERSION=${{ github.event.inputs.ghost_version }}" >> $GITHUB_ENV
            echo "MANUAL_TAG=${{ github.event.inputs.manual-tag }}" >> $GITHUB_ENV
          else
            echo "GHOST_VERSION=$(curl -s https://api.github.com/repos/tryghost/ghost/releases/latest | jq '.name' | sed 's/\"//g')" >> $GITHUB_OUTPUT
            echo "GHOST_VERSION=$(curl -s https://api.github.com/repos/tryghost/ghost/releases/latest | jq '.name' | sed 's/\"//g')" >> $GITHUB_ENV
          fi

      -
        name: Show Ghost version
        continue-on-error: true
        run: |
              echo "output of step for GHOST_VERSION=${{ steps.versions.outputs.GHOST_VERSION }}"
              echo "output of step for MANUAL_TAG=${{ steps.versions.outputs.MANUAL_TAG }}"
              echo "output of env for GHOST_VERSION=\"$(echo $GHOST_VERSION)\""
              echo "output of env for MANUAL_TAG=\"$(echo $MANUAL_TAG)\""

      - name: Docker meta default
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.GHCR_IMAGE }}
          annotations: |
            type=org.opencontainers.image.description,value=${{ github.event.repository.description }}

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
        if: ${{ matrix.platform == 'linux/arm64' || env.PLATFORM_PAIR == 'linux-arm64' }}
        continue-on-error: false
        with:
          platforms: arm64
      
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
        with:
          buildkitd-flags: --debug
          version: v0.17.0
          driver-opts: |
            network=host
            image=moby/buildkit:v0.16.0
       

      - name: Get BuildKit container ID
        id: get-buildkit-container
        run: |
          # Get the BuildKit container ID using the docker ps command
          container_id=$(docker ps -qf "name=buildx_buildkit_${{ steps.buildx.outputs.name }}")
          echo "BuildKit container ID: $container_id"
          echo "::set-output name=container_id::$container_id"

      - name: Print /etc/resolv.conf from BuildKit container
        run: |
          # Use the container ID to print the /etc/resolv.conf file
          echo "Contents of /etc/resolv.conf in the BuildKit container:"
          docker exec ${{ steps.get-buildkit-container.outputs.container_id }} cat /etc/resolv.conf

      - name: Print /run/systemd/resolve/resolv.conf
        run: |
          if [ -f /etc/resolv.conf ]; then
            echo "Contents of /etc/resolv.conf:"
            cat /etc/resolv.conf
          else
            echo "/etc/resolv.conf not found"
          fi

      
      -
        name: Build without push
        id: build
        uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # v6.7.0
        env:
          DOCKER_BUILDKIT: 1
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: GHOST_VERSION=${{ steps.versions.outputs.GHOST_VERSION }} 
          outputs: type=docker,name=${{ env.GHCR_IMAGE }},push=false

      -
        name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      -
        name: Upload digest
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 15
